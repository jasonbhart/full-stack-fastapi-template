# ============================================================================
# Production Environment Configuration Template
# ============================================================================
# SETUP INSTRUCTIONS:
# 1. DO NOT edit this file directly with secrets
# 2. Copy to a secure location: cp .env.production .env.production.local
# 3. Edit .env.production.local with your actual production secrets
# 4. Use environment variables or secrets management in deployment
# 5. Ensure .env.production.local is git-ignored (it is by default)
#
# This file contains production-specific overrides for the base .env file.
# When APP_ENV=production, settings from .env.production override .env values
#
# Production priorities:
# - Security: All secrets must be changed from defaults
# - Performance: Optimized settings for production workloads
# - Observability: Full tracing and monitoring enabled
# - Reliability: Rate limiting and error tracking active
#
# IMPORTANT SECURITY NOTES:
# - NEVER commit files with actual secrets to version control
# - Use environment variables or secrets management in production
# - Change ALL default passwords and keys
# - Enable HTTPS/TLS for all services
# ============================================================================

# ============================================================================
# GENERAL CONFIGURATION
# ============================================================================

# Production environment identifier
ENVIRONMENT=production
APP_ENV=production

# REQUIRED: Set your project name
PROJECT_NAME="Full Stack FastAPI Project"
STACK_NAME=full-stack-fastapi-project

# REQUIRED: Set to your production domain
# Example: api.your-company.com
DOMAIN=your-production-domain.com

# REQUIRED: Set to your production frontend URL
# Example: https://app.your-company.com
FRONTEND_HOST=https://your-production-domain.com

# ============================================================================
# BACKEND CONFIGURATION
# ============================================================================

# REQUIRED: Set to your production frontend domain(s)
# Must include all domains that will access the API
BACKEND_CORS_ORIGINS="https://your-production-domain.com,https://app.your-company.com"

# REQUIRED: Generate a cryptographically secure secret key
# Example: openssl rand -hex 32
# NEVER use the default value in production
SECRET_KEY=CHANGE_THIS_TO_A_SECURE_RANDOM_STRING_AT_LEAST_32_CHARS

# REQUIRED: Set production admin credentials
# Use a strong password (consider using a password manager)
FIRST_SUPERUSER=admin@your-company.com
FIRST_SUPERUSER_PASSWORD=CHANGE_THIS_TO_A_STRONG_PASSWORD

# ============================================================================
# EMAIL CONFIGURATION
# ============================================================================

# REQUIRED: Configure SMTP for production email delivery
# Use a reliable email service (SendGrid, AWS SES, Mailgun, etc.)
SMTP_HOST=smtp.your-email-provider.com
SMTP_USER=your-smtp-username
SMTP_PASSWORD=your-smtp-password
SMTP_PORT=587
SMTP_TLS=True
SMTP_SSL=False

# Production email sender
EMAILS_FROM_EMAIL=noreply@your-company.com

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# REQUIRED: Production PostgreSQL configuration
# Use a managed database service (AWS RDS, GCP Cloud SQL, etc.) for production
# NEVER use default passwords
POSTGRES_SERVER=postgres
POSTGRES_PORT=5432
POSTGRES_DB=app
POSTGRES_USER=postgres
POSTGRES_PASSWORD=CHANGE_THIS_TO_A_STRONG_DATABASE_PASSWORD

# ============================================================================
# LLM & AGENT CONFIGURATION
# ============================================================================

# LangChain Configuration
# Enable tracing in production for monitoring and debugging
LANGCHAIN_TRACING_V2=true

# REQUIRED: Set LangSmith API key for production tracing
LANGCHAIN_API_KEY=your-langsmith-api-key

# Production project name
LANGCHAIN_PROJECT=fastapi-production

# LangChain API endpoint
LANGCHAIN_ENDPOINT=https://api.smith.langchain.com

# LLM Model Configuration
# Use production-grade models for best quality
# GPT-4 recommended for production workloads
LLM_MODEL_NAME=gpt-4
LLM_MODEL_PROVIDER=openai

# Lower temperature for more consistent, reliable outputs
LLM_TEMPERATURE=0.3

# Production token limit
LLM_MAX_TOKENS=2048

# REQUIRED: Set provider API keys
# Store these in a secure secrets manager (AWS Secrets Manager, HashiCorp Vault, etc.)
OPENAI_API_KEY=your-openai-api-key
ANTHROPIC_API_KEY=your-anthropic-api-key

# Azure OpenAI Configuration (if using Azure)
AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com
AZURE_OPENAI_API_KEY=your-azure-openai-key
AZURE_OPENAI_API_VERSION=2024-02-15-preview

# ============================================================================
# OBSERVABILITY & TRACING
# ============================================================================

# Langfuse Configuration - REQUIRED for production observability
# Enable for LLM monitoring, analytics, and cost tracking
LANGFUSE_ENABLED=true

# REQUIRED: Set Langfuse API keys
# Get from https://cloud.langfuse.com or your self-hosted instance
LANGFUSE_SECRET_KEY=your-langfuse-secret-key
LANGFUSE_PUBLIC_KEY=your-langfuse-public-key

# Langfuse host
# Cloud: https://cloud.langfuse.com
# Self-hosted: https://langfuse.your-company.com
LANGFUSE_HOST=https://cloud.langfuse.com

# Sample 100% of requests in production for complete observability
# Reduce if high volume (e.g., 0.1 for 10% sampling)
LANGFUSE_SAMPLE_RATE=1.0

# ============================================================================
# RATE LIMITING
# ============================================================================

# Enable rate limiting in production to prevent abuse
RATE_LIMIT_ENABLED=true

# Production rate limits - adjust based on your needs
# Conservative defaults to prevent API abuse
RATE_LIMIT_PER_MINUTE=20
RATE_LIMIT_PER_HOUR=500

# Redis Configuration - REQUIRED for rate limiting
# Use a managed Redis service (AWS ElastiCache, Redis Cloud, etc.)
REDIS_HOST=your-redis-host.cache.amazonaws.com
REDIS_PORT=6379

# REQUIRED: Set Redis password if using authentication
REDIS_PASSWORD=your-redis-password
REDIS_DB=0

# ============================================================================
# MONITORING & LOGGING
# ============================================================================

# REQUIRED: Set Sentry DSN for error tracking and performance monitoring
# Get from https://sentry.io
# Critical for production debugging and monitoring
SENTRY_DSN=https://your-sentry-dsn@sentry.io/your-project-id

# ============================================================================
# FRONTEND FEATURE FLAGS
# ============================================================================

# Agent/AI Assistant Feature
# Enable to show agent chat interface in production
# Set to true only after agent backend is fully configured and tested
# Default: false (disabled until explicitly enabled)
VITE_ENABLE_AGENT=false

# ============================================================================
# INFRASTRUCTURE SERVICES
# ============================================================================

# Langfuse Database Password
# REQUIRED: Change this to a strong password
LANGFUSE_DB_PASSWORD=CHANGE_THIS_TO_A_STRONG_PASSWORD

# Grafana Admin Credentials
# REQUIRED: Change these credentials for production
# Generate a secure password: openssl rand -hex 32
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=CHANGE_THIS_TO_A_STRONG_PASSWORD

# Traefik Admin Authentication
# REQUIRED: Configure HTTP Basic Auth for Traefik dashboard and Prometheus
# Used when deploying with docker-compose.traefik.yml
#
# To generate a hashed password:
# docker run --rm httpd:2.4-alpine htpasswd -nbB admin "your-secure-password" | cut -d ":" -f 2
#
# USERNAME: Admin username for Basic Auth
# HASHED_PASSWORD: Bcrypt-hashed password (MUST be single-quoted to prevent shell expansion)
#
# IMPORTANT: Always wrap the hash in single quotes to prevent $ expansion by shell
# Example: HASHED_PASSWORD='$2y$05$...'
USERNAME=admin
HASHED_PASSWORD='CHANGE_THIS_TO_BCRYPT_HASHED_PASSWORD'

# ============================================================================
# DOCKER CONFIGURATION
# ============================================================================

# REQUIRED: Set to your Docker registry images
# Examples:
# - Docker Hub: your-username/backend:latest
# - AWS ECR: 123456789.dkr.ecr.region.amazonaws.com/backend:latest
# - GCR: gcr.io/your-project/backend:latest
DOCKER_IMAGE_BACKEND=your-registry/backend:latest
DOCKER_IMAGE_FRONTEND=your-registry/frontend:latest

# ============================================================================
# PRODUCTION DEPLOYMENT CHECKLIST
# ============================================================================
# Before deploying to production, ensure:
#
# ✓ All CHANGE_THIS values are replaced with actual secrets
# ✓ All your-* placeholders are set to real values
# ✓ SECRET_KEY is cryptographically random (32+ characters)
# ✓ Database passwords are strong and unique
# ✓ HTTPS/TLS is enabled for all services (DOMAIN, FRONTEND_HOST)
# ✓ CORS origins include only trusted domains
# ✓ Email SMTP is configured and tested
# ✓ Sentry DSN is set for error tracking
# ✓ LLM API keys are valid and have appropriate rate limits
# ✓ Langfuse is configured for observability
# ✓ Rate limiting is enabled and tuned
# ✓ Redis is secured with authentication
# ✓ Traefik admin credentials are set (USERNAME and HASHED_PASSWORD)
# ✓ Grafana admin password is changed from default
# ✓ Prometheus is protected with HTTP Basic Auth
# ✓ Database backups are configured
# ✓ Monitoring and alerting are set up
# ✓ This file is NOT committed to version control with real secrets
# ============================================================================
